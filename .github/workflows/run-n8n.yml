# .github/workflows/run-n8n.yml
name: Run n8n Session (Docker)

on:
  workflow_dispatch:

jobs:
  n8n_session:
    runs-on: ubuntu-latest
    
    steps:
      - name: Free Up Disk Space
        run: |
          echo "Initial disk space:"
          df -h
          sudo rm -rf /usr/share/dotnet
          sudo rm -rf /opt/ghc
          sudo rm -rf /usr/local/share/boost
          sudo rm -rf $AGENT_TOOLSDIRECTORY
          echo "Disk space after cleanup:"
          df -h

      - name: Install and Configure ngrok
        run: |
          wget https://bin.equinox.io/c/bNyj1mQVY4c/ngrok-v3-stable-linux-amd64.tgz -O ngrok.tgz
          sudo tar -xvzf ngrok.tgz -C /usr/local/bin
          rm ngrok.tgz
          ngrok config add-authtoken ${{ secrets.NGROK_AUTH_TOKEN }}
          
      - name: Run n8n via Docker and Start ngrok Tunnel
        run: |
          # Start a SPECIFIC version of n8n AND provide the critical Timezone variable.
          echo "Starting n8n Docker container..."
          docker run \
            -d \
            --name n8n \
            -p 5678:5678 \
            -e TZ=America/New_York \
            n8nio/n8n:1.45.1
          
          # --- ROBUST WAITING LOGIC ---
          echo "Waiting for n8n to become available on port 5678..."
          max_wait=120 # Wait up to 2 minutes
          count=0
          while ! curl --silent --fail http://localhost:5678 &>/dev/null; do
              if [ $count -ge $max_wait ]; then
                  echo "::error::n8n container failed to start within $max_wait seconds."
                  echo "--- Docker container logs ---"
                  docker logs n8n
                  exit 1
              fi
              printf "."
              sleep 1
              ((count++))
          done
          echo ""
          echo "✅ n8n container is up and running!"
          
          # Start ngrok
          echo "Starting ngrok tunnel..."
          ngrok http 5678 &> /dev/null &
          sleep 2
          
          # Install jq and get the public URL
          sudo apt-get update && sudo apt-get install -y jq
          N8N_URL=$(curl --silent http://127.0.0.1:4040/api/tunnels | jq -r '.tunnels[0].public_url')
          
          if [ -z "$N8N_URL" ]; then
            echo "::error::Could not retrieve ngrok tunnel URL."
            exit 1
          fi
          
          echo "✅ n8n instance is running and publicly accessible!"
          echo "--------------------------------------------------------"
          echo "Access your n8n instance at this URL:"
          echo $N8N_URL
          echo "--------------------------------------------------------"
          
          while true; do sleep 1000; done
