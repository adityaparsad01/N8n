name: Debug via SSH

on:
  workflow_dispatch:

jobs:
  debug:
    runs-on: ubuntu-latest
    
    steps:
      - name: Setup SSH Server
        run: |
          # Install necessary packages
          sudo apt-get update
          sudo apt-get install -y openssh-server jq

          # The 'runner' user already exists, so we just configure its SSH access.
          # Create the .ssh directory and add the authorized public key.
          sudo mkdir -p /home/runner/.ssh
          echo "${{ secrets.SSH_PUBLIC_KEY }}" | sudo tee /home/runner/.ssh/authorized_keys > /dev/null

          # Set the correct ownership and permissions for SSH
          sudo chown -R runner:runner /home/runner/.ssh
          sudo chmod 700 /home/runner/.ssh
          sudo chmod 600 /home/runner/.ssh/authorized_keys

          # Disable password-based authentication for security
          sudo sed -i 's/#PasswordAuthentication yes/PasswordAuthentication no/g' /etc/ssh/sshd_config
          sudo sed -i 's/PasswordAuthentication yes/PasswordAuthentication no/g' /etc/ssh/sshd_config

          # Restart the SSH server to apply changes
          sudo systemctl restart ssh

      - name: Setup ngrok
        run: |
          # Download and install ngrok
          wget https://bin.equinox.io/c/bNyj1mQVY4c/ngrok-v3-stable-linux-amd64.tgz -O ngrok.tgz
          sudo tar -xvzf ngrok.tgz -C /usr/local/bin
          rm ngrok.tgz

          # Authenticate ngrok
          ngrok config add-authtoken ${{ secrets.NGROK_AUTH_TOKEN }}
      
      - name: Create ngrok Tunnel and Output Connection Info
        run: |
          # Start ngrok tunnel in the background for SSH (port 22)
          ngrok tcp 22 &

          # Wait a few seconds for the tunnel to be established
          sleep 5

          # Get the public URL from the ngrok API and print the SSH command
          TUNNEL_URL=$(curl --silent http://127.0.0.1:4040/api/tunnels | jq -r '.tunnels[0].public_url')
          
          if [ -z "$TUNNEL_URL" ] || [ "$TUNNEL_URL" == "null" ]; then
            echo "::error::Could not retrieve ngrok tunnel URL. ngrok logs:"
            killall ngrok
            exit 1
          fi

          # Extract the hostname and port
          HOSTNAME=$(echo $TUNNEL_URL | sed -e 's/tcp:\/\///' -e 's/:.*//')
          PORT=$(echo $TUNNEL_URL | sed -e 's/.*://')

          echo "âœ… SSH connection command (copy and paste into your terminal):"
          echo "ssh runner@$HOSTNAME -p $PORT -i /path/to/your/private_key"
          echo "Example: ssh runner@$HOSTNAME -p $PORT -i ~/.ssh/id_rsa_github_actions"
          echo "----------------------------------------------------------------"
          echo "Runner will remain active. To stop it, cancel the workflow run in the GitHub UI."

      - name: Keep Runner Alive
        run: |
          # This step will run indefinitely.
          # You can cancel the workflow run manually in the GitHub Actions UI to terminate the runner.
          sleep infinity
